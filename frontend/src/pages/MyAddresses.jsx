import React, { useState } from 'react';

// Sample addresses data - in a real app, this would come from your backend
const sampleAddresses = [
  {
    id: 1,
    name: 'John Doe',
    street: '123 Main Street',
    apartment: 'Apt 4B',
    city: 'New York',
    state: 'NY',
    zipCode: '10001',
    country: 'United States',
    phone: '+1 (555) 123-4567',
    isDefault: true
  },
  {
    id: 2,
    name: 'John Doe',
    street: '456 Park Avenue',
    apartment: '',
    city: 'New York',
    state: 'NY',
    zipCode: '10022',
    country: 'United States',
    phone: '+1 (555) 987-6543',
    isDefault: false
  }
];

const MyAddresses = () => {
  const [addresses, setAddresses] = useState(sampleAddresses);
  const [isAdding, setIsAdding] = useState(false);
  const [editingId, setEditingId] = useState(null);
  const [formData, setFormData] = useState({
    name: '',
    street: '',
    apartment: '',
    city: '',
    state: '',
    zipCode: '',
    country: 'United States',
    phone: '',
    isDefault: false
  });

  const handleInputChange = (e) => {
    const { name, value, type, checked } = e.target;
    setFormData({
      ...formData,
      [name]: type === 'checkbox' ? checked : value
    });
  };

  const handleAddAddress = () => {
    setIsAdding(true);
    setFormData({
      name: '',
      street: '',
      apartment: '',
      city: '',
      state: '',
      zipCode: '',
      country: 'United States',
      phone: '',
      isDefault: false
    });
  };

  const handleEditAddress = (address) => {
    setEditingId(address.id);
    setFormData({ ...address });
  };

  const handleCancel = () => {
    setIsAdding(false);
    setEditingId(null);
  };

  const handleSubmit = (e) => {
    e.preventDefault();
    
    if (isAdding) {
      // Add new address
      const newAddress = {
        ...formData,
        id: Date.now() // In real app, this would be generated by backend
      };
      setAddresses([...addresses, newAddress]);
      setIsAdding(false);
    } else if (editingId) {
      // Update existing address
      const updatedAddresses = addresses.map(address => 
        address.id === editingId ? { ...formData, id: editingId } : address
      );
      setAddresses(updatedAddresses);
      setEditingId(null);
    }
    
    // Reset form
    setFormData({
      name: '',
      street: '',
      apartment: '',
      city: '',
      state: '',
      zipCode: '',
      country: 'United States',
      phone: '',
      isDefault: false
    });
  };

  const handleDeleteAddress = (id) => {
    if (window.confirm('Are you sure you want to delete this address?')) {
      setAddresses(addresses.filter(address => address.id !== id));
    }
  };

  const handleSetDefault = (id) => {
    const updatedAddresses = addresses.map(address => ({
      ...address,
      isDefault: address.id === id
    }));
    setAddresses(updatedAddresses);
  };

  return (
    <div className="bg-white p-6 md:p-8 rounded-lg shadow-md w-full">
      <div className="flex justify-between items-center mb-6">
        <h2 className="font-marcellus text-2xl md:text-3xl text-slate-900">My Addresses</h2>
        <button
          onClick={handleAddAddress}
          className="bg-slate-900 text-white py-2 px-4 rounded-md hover:bg-slate-700 transition text-sm uppercase tracking-widest"
        >
          Add New Address
        </button>
      </div>

      {/* Add/Edit Address Form */}
      {(isAdding || editingId) && (
        <div className="mb-8 p-6 border border-slate-200 rounded-lg">
          <h3 className="font-medium text-lg mb-4">
            {isAdding ? 'Add New Address' : 'Edit Address'}
          </h3>
          <form onSubmit={handleSubmit} className="grid grid-cols-1 md:grid-cols-2 gap-4">
            <div className="md:col-span-2">
              <label className="block text-sm font-medium text-slate-700 mb-1">Full Name</label>
              <input
                type="text"
                name="name"
                value={formData.name}
                onChange={handleInputChange}
                className="w-full px-4 py-2 border border-slate-300 rounded-md focus:outline-none focus:ring-2 focus:ring-slate-900"
                required
              />
            </div>
            
            <div className="md:col-span-2">
              <label className="block text-sm font-medium text-slate-700 mb-1">Street Address</label>
              <input
                type="text"
                name="street"
                value={formData.street}
                onChange={handleInputChange}
                className="w-full px-4 py-2 border border-slate-300 rounded-md focus:outline-none focus:ring-2 focus:ring-slate-900"
                required
              />
            </div>
            
            <div className="md:col-span-2">
              <label className="block text-sm font-medium text-slate-700 mb-1">Apartment, Suite, etc. (Optional)</label>
              <input
                type="text"
                name="apartment"
                value={formData.apartment}
                onChange={handleInputChange}
                className="w-full px-4 py-2 border border-slate-300 rounded-md focus:outline-none focus:ring-2 focus:ring-slate-900"
              />
            </div>
            
            <div>
              <label className="block text-sm font-medium text-slate-700 mb-1">City</label>
              <input
                type="text"
                name="city"
                value={formData.city}
                onChange={handleInputChange}
                className="w-full px-4 py-2 border border-slate-300 rounded-md focus:outline-none focus:ring-2 focus:ring-slate-900"
                required
              />
            </div>
            
            <div>
              <label className="block text-sm font-medium text-slate-700 mb-1">State/Province</label>
              <input
                type="text"
                name="state"
                value={formData.state}
                onChange={handleInputChange}
                className="w-full px-4 py-2 border border-slate-300 rounded-md focus:outline-none focus:ring-2 focus:ring-slate-900"
                required
              />
            </div>
            
            <div>
              <label className="block text-sm font-medium text-slate-700 mb-1">ZIP/Postal Code</label>
              <input
                type="text"
                name="zipCode"
                value={formData.zipCode}
                onChange={handleInputChange}
                className="w-full px-4 py-2 border border-slate-300 rounded-md focus:outline-none focus:ring-2 focus:ring-slate-900"
                required
              />
            </div>
            
            <div>
              <label className="block text-sm font-medium text-slate-700 mb-1">Country</label>
              <select
                name="country"
                value={formData.country}
                onChange={handleInputChange}
                className="w-full px-4 py-2 border border-slate-300 rounded-md focus:outline-none focus:ring-2 focus:ring-slate-900"
                required
              >
                <option value="United States">United States</option>
                <option value="Canada">Canada</option>
                <option value="United Kingdom">United Kingdom</option>
                <option value="Australia">Australia</option>
                <option value="India">India</option>
              </select>
            </div>
            
            <div className="md:col-span-2">
              <label className="block text-sm font-medium text-slate-700 mb-1">Phone Number</label>
              <input
                type="tel"
                name="phone"
                value={formData.phone}
                onChange={handleInputChange}
                className="w-full px-4 py-2 border border-slate-300 rounded-md focus:outline-none focus:ring-2 focus:ring-slate-900"
                required
              />
            </div>
            
            <div className="md:col-span-2 flex items-center">
              <input
                type="checkbox"
                id="isDefault"
                name="isDefault"
                checked={formData.isDefault}
                onChange={handleInputChange}
                className="h-4 w-4 text-slate-900 focus:ring-slate-900 border-slate-300 rounded"
              />
              <label htmlFor="isDefault" className="ml-2 block text-sm text-slate-700">
                Set as default address
              </label>
            </div>
            
            <div className="md:col-span-2 flex space-x-4 pt-4">
              <button
                type="submit"
                className="bg-slate-900 text-white py-2 px-6 rounded-md hover:bg-slate-700 transition text-sm uppercase tracking-widest"
              >
                Save Address
              </button>
              <button
                type="button"
                onClick={handleCancel}
                className="bg-white text-slate-900 py-2 px-6 rounded-md border border-slate-900 hover:bg-slate-100 transition text-sm uppercase tracking-widest"
              >
                Cancel
              </button>
            </div>
          </form>
        </div>
      )}

      {/* Addresses List */}
      {addresses.length === 0 ? (
        <div className="text-center py-12">
          <div className="text-slate-300 text-5xl mb-4">🏠</div>
          <p className="text-slate-500">You haven't added any addresses yet.</p>
          <button
            onClick={handleAddAddress}
            className="mt-4 bg-slate-900 text-white py-2 px-6 rounded-md hover:bg-slate-700 transition text-sm uppercase tracking-widest"
          >
            Add Your First Address
          </button>
        </div>
      ) : (
        <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
          {addresses.map((address) => (
            <div
              key={address.id}
              className={`border rounded-lg p-5 relative ${address.isDefault ? 'border-2 border-slate-900' : 'border-slate-200'}`}
            >
              {address.isDefault && (
                <span className="absolute -top-2 left-4 bg-slate-900 text-white text-xs px-2 py-1 rounded">
                  DEFAULT
                </span>
              )}
              <div className="mb-4">
                <h3 className="font-medium text-slate-900">{address.name}</h3>
                <p className="text-slate-600 mt-2">
                  {address.street}
                  {address.apartment && `, ${address.apartment}`}
                  <br />
                  {address.city}, {address.state} {address.zipCode}
                  <br />
                  {address.country}
                </p>
                <p className="text-slate-600 mt-2">{address.phone}</p>
              </div>
              <div className="flex space-x-4">
                <button
                  onClick={() => handleEditAddress(address)}
                  className="text-slate-900 hover:text-slate-700 text-sm font-medium"
                >
                  Edit
                </button>
                <button
                  onClick={() => handleDeleteAddress(address.id)}
                  className="text-red-600 hover:text-red-800 text-sm font-medium"
                >
                  Delete
                </button>
                {!address.isDefault && (
                  <button
                    onClick={() => handleSetDefault(address.id)}
                    className="text-slate-900 hover:text-slate-700 text-sm font-medium ml-auto"
                  >
                    Set as Default
                  </button>
                )}
              </div>
            </div>
          ))}
        </div>
      )}
    </div>
  );
};

export default MyAddresses;